<?xml version="1.0" encoding="UTF-8"?>

<project name="gyman" default="prepare">

    <property name="php_bin" value="php" />
    <property name="capifony_bin" value="cap" />
    <property name="symfony_console" value="app/console" />
    
    <target name="phpmd" description="php mess detector">
        <exec command="bin/phpmd src/ text app/phpmd.xml" checkreturn="true" passthru="true" />
    </target>

    <target name="phpcs" description="php code sniffer">
        <exec command="bin/phpcs --standard=app/phpcs.xml src/" checkreturn="true" passthru="true" />
    </target>

    <target name="phpcbf" description="php code beautifier and fixer">
        <exec command="bin/phpcbf -p --encoding=utf8 --standard=app/phpcs.xml src/" checkreturn="true" passthru="true" />
    </target>

    <target name="test-phplint" description="linting phpfiles">
        <foreach param="fname" absparam="php-file" target="phplint">
            <fileset dir="${project.basedir}">
                <include name="app/**/*.php" />
                <include name="src/**/*.php" />
                <exclude name="app/cache/**/*.php" />
            </fileset>
        </foreach>
    </target>
    
    <target name="phplint">
        <exec command="${php_bin} -l ${php-file}" checkreturn="true" passthru="true" />
    </target>

    <target name="test-twiglint">
        <exec command="${php_bin} ${symfony_console} twig:lint app/Resources" checkreturn="true" passthru="true" />
        <exec command="${php_bin} ${symfony_console} twig:lint src" checkreturn="true" passthru="true" />
    </target>


    <target name="test-translations">
        <foreach list="AccountBundle,AdminBundle,FrontBundle,MailerBundle,SubscriptionBundle,TestBundle" param="bundle" target="find-translations" delimiter="," /> 
    </target>

    <target name="find-translations">
        <exec command="${php_bin} ${symfony_console} translation:debug --only-missing pl ${bundle}" checkreturn="true" passthru="true" />
    </target>
        
    <target name="deploy-prod">
        <exec command="${capifony_bin} deploy" checkreturn="true" output="stdout" />
        <exec command="${capifony_bin} deploy:cleanup" checkreturn="true" output="stdout" />
        <exec command="${capifony_bin} apache:restart" checkreturn="true" output="stdout" />
        <exec command="${capifony_bin} symfony:assets:install" checkreturn="true" output="stdout" />
        <exec command="${capifony_bin} symfony:assetic:dump" checkreturn="true" output="stdout" />
        <exec command="${capifony_bin} symfony:cache:clear" checkreturn="true" output="stdout" />
    </target>
      
    <target name="reset-db">
        <if>
            <equals arg1="${env}" arg2="prod" />
            <then>
                <fail message="Cannot reset-db on prod environment!!!" />
            </then>
            <elseif>
                <not>
                    <isset property="env" />
                </not>
                <then>
                    <echo>Setting to default environment (dev)</echo>
                    <property name="env" value="dev" />
                </then>
            </elseif>
        </if>
        <echo>Clearing cache - ${env} environment</echo>
        <exec command="${php_bin} ${symfony_console} cache:clear --env=${env}" checkreturn="true" passthru="true" />
        <echo>Dropping database - ${env} environment</echo>
        <exec command="${php_bin} ${symfony_console} doctrine:schema:drop --env=${env} --force --no-interaction" checkreturn="true" passthru="true" />
        <echo>Creating new schema - ${env} environment</echo>
        <exec command="${php_bin} ${symfony_console} doctrine:schema:create --env=${env} --no-interaction" checkreturn="true" passthru="true"  />
        <echo>Loading fixtures - ${env} environment</echo>
        <exec command="${php_bin} ${symfony_console} doctrine:fixtures:load --env=${env} --no-interaction" checkreturn="true" passthru="true"  />
    </target>
   
    <target name="test-phpunit">
        <phingcall target="reset-db">
            <property name="env" value="test" />
        </phingcall>
      
        <echo>Running phpunit tests</echo>
        <exec command="bin/phpunit -c app" checkreturn="true" passthru="true" />
    </target>
    
    <target name="test">
        <phingcall target="test-phplint" />
        <phingcall target="test-twiglint" />
        <phingcall target="phpcs" />
        <!-- phingcall target="phpmd" / -->
        <phingcall target="test-phpunit" />
    </target>

    <target name="prepare">
        <echo>Prepare task</echo>
    </target>
</project>
